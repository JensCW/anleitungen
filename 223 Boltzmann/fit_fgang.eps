%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 819 572
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Dokumente und Einstellungen\admin\Desktop\Anleitungen\PAP2\223 Boltzmannkonstante\fit_fgang.eps)
%%CreationDate: Thu Dec 13 12:08:54 2012
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 48/s48 put
Encoding 49/s49 put
/BoundingBoxes 4 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
end
/Metrics 4 dict def
 Metrics begin
/s32 569 def
/s48 1139 def
/s49 1139 def
end
/CharProcs 4 dict def
CharProcs begin
/.notdef {} def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 102/s102 put
Encoding 103/s103 put
/BoundingBoxes 6 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s102 [0 -434 569 1854] def
/s103 [0 -434 1139 1854] def
end
/Metrics 6 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s102 569 def
/s103 1139 def
end
/CharProcs 6 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s103 {
102 -88 m
277 -114 102 -88 277 -114 c
284.33 -168 304.67 -207.33 338 -232 c
382.67 -265.33 443.67 -282 521 -282 c
604.33 -282 668.67 -265.33 714 -232 c
759.33 -198.67 790 -152 806 -92 c
815.33 -55.33 819.67 21.67 819 139 c
740.33 46.33 642.33 0 525 0 c
379 0 266 52.67 186 158 c
106 263.33 66 389.67 66 537 c
66 638.33 84.33 731.83 121 817.5 c
157.67 903.17 210.83 969.33 280.5 1016 c
350.17 1062.67 432 1086 526 1086 c
651.33 1086 754.67 1035.33 836 934 c
836 1062 836 934 836 1062 c
1002 1062 836 1062 1002 1062 c
1002 144 1002 1062 1002 144 c
1002 -21.33 985.17 -138.5 951.5 -207.5 c
917.83 -276.5 864.5 -331 791.5 -371 c
718.5 -411 628.67 -431 522 -431 c
395.33 -431 293 -402.5 215 -345.5 c
137 -288.5 99.33 -202.67 102 -88 c
closepath 251 550 m
251 410.67 278.67 309 334 245 c
389.33 181 458.67 149 542 149 c
624.67 149 694 180.83 750 244.5 c
806 308.17 834 408 834 544 c
834 674 805.17 772 747.5 838 c
689.83 904 620.33 937 539 937 c
459 937 391 904.5 335 839.5 c
279 774.5 251 678 251 550 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC3_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 70/s70 put
Encoding 72/s72 put
Encoding 91/s91 put
Encoding 93/s93 put
Encoding 101/s101 put
Encoding 102/s102 put
Encoding 103/s103 put
Encoding 110/s110 put
Encoding 113/s113 put
Encoding 114/s114 put
Encoding 117/s117 put
Encoding 122/s122 put
/BoundingBoxes 16 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s70 [0 -434 1251 1854] def
/s72 [0 -434 1479 1854] def
/s91 [0 -434 569 1854] def
/s93 [0 -434 569 1854] def
/s101 [0 -434 1139 1854] def
/s102 [0 -434 569 1854] def
/s103 [0 -434 1139 1854] def
/s110 [0 -434 1139 1854] def
/s113 [0 -434 1139 1854] def
/s114 [0 -434 682 1854] def
/s117 [0 -434 1139 1854] def
/s122 [0 -434 1024 1854] def
end
/Metrics 16 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s70 1251 def
/s72 1479 def
/s91 569 def
/s93 569 def
/s101 1139 def
/s102 569 def
/s103 1139 def
/s110 1139 def
/s113 1139 def
/s114 682 def
/s117 1139 def
/s122 1024 def
end
/CharProcs 16 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s70 {
168 0 m
168 1466 168 0 168 1466 c
1157 1466 168 1466 1157 1466 c
1157 1293 1157 1466 1157 1293 c
362 1293 1157 1293 362 1293 c
362 839 362 1293 362 839 c
1050 839 362 839 1050 839 c
1050 666 1050 839 1050 666 c
362 666 1050 666 362 666 c
362 0 362 666 362 0 c
168 0 362 0 168 0 c
closepath } bind def
/s72 {
164 0 m
164 1466 164 0 164 1466 c
358 1466 164 1466 358 1466 c
358 864 358 1466 358 864 c
1120 864 358 864 1120 864 c
1120 1466 1120 864 1120 1466 c
1314 1466 1120 1466 1314 1466 c
1314 0 1314 1466 1314 0 c
1120 0 1314 0 1120 0 c
1120 691 1120 0 1120 691 c
358 691 1120 691 358 691 c
358 0 358 691 358 0 c
164 0 358 0 164 0 c
closepath } bind def
/s91 {
139 -407 m
139 1466 139 -407 139 1466 c
536 1466 139 1466 536 1466 c
536 1317 536 1466 536 1317 c
319 1317 536 1317 319 1317 c
319 -258 319 1317 319 -258 c
536 -258 319 -258 536 -258 c
536 -407 536 -258 536 -407 c
139 -407 536 -407 139 -407 c
closepath } bind def
/s93 {
436 -407 m
39 -407 436 -407 39 -407 c
39 -258 39 -407 39 -258 c
256 -258 39 -258 256 -258 c
256 1317 256 -258 256 1317 c
39 1317 256 1317 39 1317 c
39 1466 39 1317 39 1466 c
436 1466 39 1466 436 1466 c
436 -407 436 1466 436 -407 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s103 {
102 -88 m
277 -114 102 -88 277 -114 c
284.33 -168 304.67 -207.33 338 -232 c
382.67 -265.33 443.67 -282 521 -282 c
604.33 -282 668.67 -265.33 714 -232 c
759.33 -198.67 790 -152 806 -92 c
815.33 -55.33 819.67 21.67 819 139 c
740.33 46.33 642.33 0 525 0 c
379 0 266 52.67 186 158 c
106 263.33 66 389.67 66 537 c
66 638.33 84.33 731.83 121 817.5 c
157.67 903.17 210.83 969.33 280.5 1016 c
350.17 1062.67 432 1086 526 1086 c
651.33 1086 754.67 1035.33 836 934 c
836 1062 836 934 836 1062 c
1002 1062 836 1062 1002 1062 c
1002 144 1002 1062 1002 144 c
1002 -21.33 985.17 -138.5 951.5 -207.5 c
917.83 -276.5 864.5 -331 791.5 -371 c
718.5 -411 628.67 -431 522 -431 c
395.33 -431 293 -402.5 215 -345.5 c
137 -288.5 99.33 -202.67 102 -88 c
closepath 251 550 m
251 410.67 278.67 309 334 245 c
389.33 181 458.67 149 542 149 c
624.67 149 694 180.83 750 244.5 c
806 308.17 834 408 834 544 c
834 674 805.17 772 747.5 838 c
689.83 904 620.33 937 539 937 c
459 937 391 904.5 335 839.5 c
279 774.5 251 678 251 550 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s113 {
812 -407 m
812 113 812 -407 812 113 c
784 73.67 744.83 41 694.5 15 c
644.17 -11 590.67 -24 534 -24 c
408 -24 299.5 26.33 208.5 127 c
117.5 227.67 72 365.67 72 541 c
72 647.67 90.5 743.33 127.5 828 c
164.5 912.67 218.17 976.83 288.5 1020.5 c
358.83 1064.17 436 1086 520 1086 c
651.33 1086 754.67 1030.67 830 920 c
830 1062 830 920 830 1062 c
992 1062 830 1062 992 1062 c
992 -407 992 1062 992 -407 c
812 -407 992 -407 812 -407 c
closepath 257 534 m
257 397.33 285.67 294.83 343 226.5 c
400.33 158.17 469 124 549 124 c
625.67 124 691.67 156.5 747 221.5 c
802.33 286.5 830 385.33 830 518 c
830 659.33 800.83 765.67 742.5 837 c
684.17 908.33 615.67 944 537 944 c
459 944 392.83 910.83 338.5 844.5 c
284.17 778.17 257 674.67 257 534 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s117 {
831 0 m
831 156 831 0 831 156 c
748.33 36 636 -24 494 -24 c
431.33 -24 372.83 -12 318.5 12 c
264.17 36 223.83 66.17 197.5 102.5 c
171.17 138.83 152.67 183.33 142 236 c
134.67 271.33 131 327.33 131 404 c
131 1062 131 404 131 1062 c
311 1062 131 1062 311 1062 c
311 473 311 1062 311 473 c
311 379 314.67 315.67 322 283 c
333.33 235.67 357.33 198.5 394 171.5 c
430.67 144.5 476 131 530 131 c
584 131 634.67 144.83 682 172.5 c
729.33 200.17 762.83 237.83 782.5 285.5 c
802.17 333.17 812 402.33 812 493 c
812 1062 812 493 812 1062 c
992 1062 812 1062 992 1062 c
992 0 992 1062 992 0 c
831 0 992 0 831 0 c
closepath } bind def
/s122 {
40 0 m
40 146 40 0 40 146 c
716 922 40 146 716 922 c
639.33 918 571.67 916 513 916 c
80 916 513 916 80 916 c
80 1062 80 916 80 1062 c
948 1062 80 1062 948 1062 c
948 943 948 1062 948 943 c
373 269 948 943 373 269 c
262 146 373 269 262 146 c
342.67 152 418.33 155 489 155 c
980 155 489 155 980 155 c
980 0 980 155 980 0 c
40 0 980 0 40 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 818.65 571.92 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.444506 0.444503 sc

/initmtx mtx cmtx def
[0.539932 -0 0 -0.539932 0 1286.65] concat
gs
gs
1 -1 sc
/MC1_Arial 75 self 584 -2102 m
(100)[42 42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 1117 -2102 m
(1000)[42 42 42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 1649 -2102 m
(10000)[42 42 42 42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 2182 -2102 m
(100000)[42 42 42 42 42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 2715 -2102 m
(1000000)[42 42 42 42 42 42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 468 -1568 m
(10)[42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 426 -1043 m
(100)[42 42 42 ] xs
1 -1 sc
gr
gs
1 -1 sc
/MC1_Arial 75 self 384 -517 m
(1000)[42 42 42 42 ] xs
1 -1 sc
gr
622 2003 m
622 1986 l
7 sw
1 sj
1 scap
st
647 2020 m
647 1986 l
st
814 2003 m
814 1986 l
st
911 2003 m
911 1986 l
st
980 2003 m
980 1986 l
st
1034 2003 m
1034 1986 l
st
1078 2003 m
1078 1986 l
st
1115 2003 m
1115 1986 l
st
1147 2003 m
1147 1986 l
st
1175 2003 m
1175 1986 l
st
1201 2020 m
1201 1986 l
st
1367 2003 m
1367 1986 l
st
1465 2003 m
1465 1986 l
st
1534 2003 m
1534 1986 l
st
1588 2003 m
1588 1986 l
st
1632 2003 m
1632 1986 l
st
1669 2003 m
1669 1986 l
st
1701 2003 m
1701 1986 l
st
1729 2003 m
1729 1986 l
st
1754 2020 m
1754 1986 l
st
1921 2003 m
1921 1986 l
st
2019 2003 m
2019 1986 l
st
2088 2003 m
2088 1986 l
st
2141 2003 m
2141 1986 l
st
2185 2003 m
2185 1986 l
st
2222 2003 m
2222 1986 l
st
2254 2003 m
2254 1986 l
st
2283 2003 m
2283 1986 l
st
2308 2020 m
2308 1986 l
st
2475 2003 m
2475 1986 l
st
2572 2003 m
2572 1986 l
st
2641 2003 m
2641 1986 l
st
2695 2003 m
2695 1986 l
st
2739 2003 m
2739 1986 l
st
2776 2003 m
2776 1986 l
st
2808 2003 m
2808 1986 l
st
2836 2003 m
2836 1986 l
st
2862 2020 m
2862 1986 l
st
609 1986 m
2936 1986 l
st
592 1912 m
609 1912 l
st
592 1819 m
609 1819 l
st
592 1754 m
609 1754 l
st
592 1703 m
609 1703 l
st
592 1661 m
609 1661 l
st
592 1626 m
609 1626 l
st
592 1596 m
609 1596 l
st
592 1569 m
609 1569 l
st
575 1545 m
609 1545 l
st
592 1387 m
609 1387 l
st
592 1294 m
609 1294 l
st
592 1229 m
609 1229 l
st
592 1178 m
609 1178 l
st
592 1136 m
609 1136 l
st
592 1101 m
609 1101 l
st
592 1071 m
609 1071 l
st
592 1044 m
609 1044 l
st
575 1020 m
609 1020 l
st
592 862 m
609 862 l
st
592 769 m
609 769 l
st
592 703 m
609 703 l
st
592 653 m
609 653 l
st
592 611 m
609 611 l
st
592 576 m
609 576 l
st
592 545 m
609 545 l
st
592 519 m
609 519 l
st
575 494 m
609 494 l
st
592 336 m
609 336 l
st
609 1986 m
609 276 l
st
622 276 m
622 293 l
st
647 276 m
647 310 l
st
814 276 m
814 293 l
st
911 276 m
911 293 l
st
980 276 m
980 293 l
st
1034 276 m
1034 293 l
st
1078 276 m
1078 293 l
st
1115 276 m
1115 293 l
st
1147 276 m
1147 293 l
st
1175 276 m
1175 293 l
st
1201 276 m
1201 310 l
st
1367 276 m
1367 293 l
st
1465 276 m
1465 293 l
st
1534 276 m
1534 293 l
st
1588 276 m
1588 293 l
st
1632 276 m
1632 293 l
st
1669 276 m
1669 293 l
st
1701 276 m
1701 293 l
st
1729 276 m
1729 293 l
st
1754 276 m
1754 310 l
st
1921 276 m
1921 293 l
st
2019 276 m
2019 293 l
st
2088 276 m
2088 293 l
st
2141 276 m
2141 293 l
st
2185 276 m
2185 293 l
st
2222 276 m
2222 293 l
st
2254 276 m
2254 293 l
st
2283 276 m
2283 293 l
st
2308 276 m
2308 310 l
st
2475 276 m
2475 293 l
st
2572 276 m
2572 293 l
st
2641 276 m
2641 293 l
st
2695 276 m
2695 293 l
st
2739 276 m
2739 293 l
st
2776 276 m
2776 293 l
st
2808 276 m
2808 293 l
st
2836 276 m
2836 293 l
st
2862 276 m
2862 310 l
st
609 276 m
2936 276 l
st
2936 1912 m
2919 1912 l
st
2936 1819 m
2919 1819 l
st
2936 1754 m
2919 1754 l
st
2936 1703 m
2919 1703 l
st
2936 1661 m
2919 1661 l
st
2936 1626 m
2919 1626 l
st
2936 1596 m
2919 1596 l
st
2936 1569 m
2919 1569 l
st
2936 1545 m
2902 1545 l
st
2936 1387 m
2919 1387 l
st
2936 1294 m
2919 1294 l
st
2936 1229 m
2919 1229 l
st
2936 1178 m
2919 1178 l
st
2936 1136 m
2919 1136 l
st
2936 1101 m
2919 1101 l
st
2936 1071 m
2919 1071 l
st
2936 1044 m
2919 1044 l
st
2936 1020 m
2902 1020 l
st
2936 862 m
2919 862 l
st
2936 769 m
2919 769 l
st
2936 703 m
2919 703 l
st
2936 653 m
2919 653 l
st
2936 611 m
2919 611 l
st
2936 576 m
2919 576 l
st
2936 545 m
2919 545 l
st
2936 519 m
2919 519 l
st
2936 494 m
2902 494 l
st
2936 336 m
2919 336 l
st
2936 1986 m
2936 276 l
st
gs
pathproc 609 276 2328 1711 np rectpath
/eocl cland
np exec
681 1703 m
657 1703 l
3 sw
st
718 1703 m
701 1703 l
st
750 1703 m
738 1703 l
st
778 1703 m
770 1703 l
st
804 1703 m
798 1703 l
st
827 1703 m
824 1703 l
st
851 1719 m
844 1711 l
st
871 1711 m
864 1719 l
st
967 1555 m
956 1693 l
st
991 1462 m
981 1535 l
st
1012 1397 m
1005 1442 l
st
1022 1346 m
1016 1377 l
st
1032 1304 m
1026 1326 l
st
1041 1269 m
1036 1284 l
st
1051 1212 m
1045 1249 l
st
1058 1187 m
1056 1193 l
st
1068 1146 m
1063 1168 l
st
1076 1111 m
1072 1126 l
st
1084 1067 m
1080 1091 l
st
1091 1030 m
1088 1047 l
st
1099 998 m
1095 1010 l
st
1106 970 m
1103 978 l
st
1113 937 m
1110 950 l
st
1120 902 m
1117 917 l
st
1126 872 m
1124 882 l
st
1132 845 m
1131 852 l
st
1139 816 m
1137 825 l
st
1145 787 m
1143 796 l
st
1150 764 m
1150 767 l
st
1157 737 m
1155 744 l
st
1162 713 m
1161 717 l
st
1167 692 m
1167 693 l
st
1173 672 m
1172 672 l
st
1178 651 m
1178 652 l
st
1242 513 m
1211 558 l
st
1275 497 m
1258 502 l
st
1307 493 m
1295 493 l
st
1335 492 m
1327 492 l
st
1360 493 m
1355 493 l
st
1382 493 m
1380 493 l
st
1403 493 m
1402 492 l
st
1789 490 m
1765 490 l
st
1826 490 m
1809 490 l
st
1858 489 m
1846 490 l
st
1886 490 m
1878 489 l
st
1911 490 m
1906 490 l
st
1934 490 m
1931 490 l
st
1955 490 m
1954 490 l
st
2116 553 m
2116 553 l
st
2128 575 m
2125 571 l
st
2137 598 m
2136 593 l
st
2148 628 m
2144 616 l
st
2157 657 m
2154 647 l
st
2166 688 m
2163 677 l
st
2175 724 m
2171 708 l
st
2183 759 m
2179 744 l
st
2191 792 m
2187 779 l
st
2199 825 m
2195 812 l
st
2206 863 m
2203 845 l
st
2213 895 m
2210 883 l
st
2220 925 m
2217 915 l
st
2227 959 m
2224 945 l
st
2234 988 m
2231 979 l
st
2240 1021 m
2238 1008 l
st
2246 1047 m
2244 1041 l
st
2252 1075 m
2250 1067 l
st
2258 1108 m
2256 1095 l
st
2271 1168 m
2267 1146 l
st
2275 1192 m
2274 1188 l
st
2281 1219 m
2279 1212 l
st
2291 1249 m
2290 1239 l
st
2297 1284 m
2294 1269 l
st
2302 1326 m
2299 1304 l
st
2350 1535 m
2310 1346 l
st
2379 1545 m
2362 1545 l
st
2419 1693 m
2391 1555 l
st
2439 1703 m
2431 1703 l
st
2473 1555 m
2451 1693 l
st
2497 1693 m
2476 1555 l
st
2509 1703 m
2508 1703 l
st
2555 1555 m
2539 1693 l
st
2587 1693 m
2573 1555 l
st
2628 1555 m
2617 1693 l
st
2640 1693 m
2630 1555 l
st
2674 1774 m
2665 1713 l
st
2684 1713 m
2676 1774 l
st
2730 1555 m
2723 1693 l
st
2746 1693 m
2740 1555 l
st
2761 1555 m
2755 1693 l
st
2769 1693 m
2762 1555 l
st
2814 1555 m
2808 1693 l
st
2820 1693 m
2814 1555 l
st
2825 1555 m
2820 1693 l
st
2831 1693 m
2825 1555 l
st
2850 1717 m
2849 1713 l
st
2855 1713 m
2854 1717 l
st
641 1697 12 12 rectfill
2854 1717 m
1 sw
641 1697 12 12 rectstroke
685 1697 12 12 rectfill
685 1697 12 12 rectstroke
722 1697 12 12 rectfill
722 1697 12 12 rectstroke
754 1697 12 12 rectfill
754 1697 12 12 rectstroke
782 1697 12 12 rectfill
782 1697 12 12 rectstroke
808 1697 12 12 rectfill
808 1697 12 12 rectstroke
831 1697 12 12 rectfill
831 1697 12 12 rectstroke
852 1721 12 12 rectfill
852 1721 12 12 rectstroke
871 1697 12 12 rectfill
871 1697 12 12 rectstroke
889 1697 12 12 rectfill
889 1697 12 12 rectstroke
905 1697 12 12 rectfill
905 1697 12 12 rectstroke
921 1697 12 12 rectfill
921 1697 12 12 rectstroke
935 1697 12 12 rectfill
935 1697 12 12 rectstroke
949 1697 12 12 rectfill
949 1697 12 12 rectstroke
962 1539 12 12 rectfill
962 1539 12 12 rectstroke
974 1539 12 12 rectfill
974 1539 12 12 rectstroke
986 1446 12 12 rectfill
986 1446 12 12 rectstroke
997 1446 12 12 rectfill
997 1446 12 12 rectstroke
1008 1381 12 12 rectfill
1008 1381 12 12 rectstroke
1018 1330 12 12 rectfill
1018 1330 12 12 rectstroke
1028 1288 12 12 rectfill
1028 1288 12 12 rectstroke
1037 1253 12 12 rectfill
1037 1253 12 12 rectstroke
1047 1196 12 12 rectfill
1047 1196 12 12 rectstroke
1055 1172 12 12 rectfill
1055 1172 12 12 rectstroke
1064 1130 12 12 rectfill
1064 1130 12 12 rectstroke
1072 1095 12 12 rectfill
1072 1095 12 12 rectstroke
1080 1051 12 12 rectfill
1080 1051 12 12 rectstroke
1087 1014 12 12 rectfill
1087 1014 12 12 rectstroke
1095 982 12 12 rectfill
1095 982 12 12 rectstroke
1102 954 12 12 rectfill
1102 954 12 12 rectstroke
1109 921 12 12 rectfill
1109 921 12 12 rectstroke
1116 886 12 12 rectfill
1116 886 12 12 rectstroke
1122 856 12 12 rectfill
1122 856 12 12 rectstroke
1129 829 12 12 rectfill
1129 829 12 12 rectstroke
1135 800 12 12 rectfill
1135 800 12 12 rectstroke
1141 771 12 12 rectfill
1141 771 12 12 rectstroke
1147 748 12 12 rectfill
1147 748 12 12 rectstroke
1153 721 12 12 rectfill
1153 721 12 12 rectstroke
1158 697 12 12 rectfill
1158 697 12 12 rectstroke
1164 676 12 12 rectfill
1164 676 12 12 rectstroke
1169 656 12 12 rectfill
1169 656 12 12 rectstroke
1175 635 12 12 rectfill
1175 635 12 12 rectstroke
1180 619 12 12 rectfill
1180 619 12 12 rectstroke
1185 601 12 12 rectfill
1185 601 12 12 rectstroke
1190 587 12 12 rectfill
1190 587 12 12 rectstroke
1195 573 12 12 rectfill
1195 573 12 12 rectstroke
1199 560 12 12 rectfill
1199 560 12 12 rectstroke
1242 499 12 12 rectfill
1242 499 12 12 rectstroke
1279 488 12 12 rectfill
1279 488 12 12 rectstroke
1311 486 12 12 rectfill
1311 486 12 12 rectstroke
1339 486 12 12 rectfill
1339 486 12 12 rectstroke
1364 488 12 12 rectfill
1364 488 12 12 rectstroke
1386 486 12 12 rectfill
1386 486 12 12 rectstroke
1407 487 12 12 rectfill
1407 487 12 12 rectstroke
1426 486 12 12 rectfill
1426 486 12 12 rectstroke
1444 486 12 12 rectfill
1444 486 12 12 rectstroke
1460 486 12 12 rectfill
1460 486 12 12 rectstroke
1476 486 12 12 rectfill
1476 486 12 12 rectstroke
1490 486 12 12 rectfill
1490 486 12 12 rectstroke
1504 486 12 12 rectfill
1504 486 12 12 rectstroke
1517 486 12 12 rectfill
1517 486 12 12 rectstroke
1529 486 12 12 rectfill
1529 486 12 12 rectstroke
1541 485 12 12 rectfill
1541 485 12 12 rectstroke
1552 486 12 12 rectfill
1552 486 12 12 rectstroke
1563 485 12 12 rectfill
1563 485 12 12 rectstroke
1573 485 12 12 rectfill
1573 485 12 12 rectstroke
1583 485 12 12 rectfill
1583 485 12 12 rectstroke
1592 485 12 12 rectfill
1592 485 12 12 rectstroke
1601 485 12 12 rectfill
1601 485 12 12 rectstroke
1610 485 12 12 rectfill
1610 485 12 12 rectstroke
1618 485 12 12 rectfill
1618 485 12 12 rectstroke
1626 486 12 12 rectfill
1626 486 12 12 rectstroke
1634 484 12 12 rectfill
1634 484 12 12 rectstroke
1642 485 12 12 rectfill
1642 485 12 12 rectstroke
1649 484 12 12 rectfill
1649 484 12 12 rectstroke
1656 484 12 12 rectfill
1656 484 12 12 rectstroke
1663 485 12 12 rectfill
1663 485 12 12 rectstroke
1670 484 12 12 rectfill
1670 484 12 12 rectstroke
1677 485 12 12 rectfill
1677 485 12 12 rectstroke
1683 484 12 12 rectfill
1683 484 12 12 rectstroke
1689 484 12 12 rectfill
1689 484 12 12 rectstroke
1695 484 12 12 rectfill
1695 484 12 12 rectstroke
1701 485 12 12 rectfill
1701 485 12 12 rectstroke
1707 484 12 12 rectfill
1707 484 12 12 rectstroke
1713 484 12 12 rectfill
1713 484 12 12 rectstroke
1718 485 12 12 rectfill
1718 485 12 12 rectstroke
1724 484 12 12 rectfill
1724 484 12 12 rectstroke
1729 484 12 12 rectfill
1729 484 12 12 rectstroke
1734 484 12 12 rectfill
1734 484 12 12 rectstroke
1739 484 12 12 rectfill
1739 484 12 12 rectstroke
1744 484 12 12 rectfill
1744 484 12 12 rectstroke
1749 484 12 12 rectfill
1749 484 12 12 rectstroke
1793 484 12 12 rectfill
1793 484 12 12 rectstroke
1830 484 12 12 rectfill
1830 484 12 12 rectstroke
1862 483 12 12 rectfill
1862 483 12 12 rectstroke
1890 484 12 12 rectfill
1890 484 12 12 rectstroke
1915 484 12 12 rectfill
1915 484 12 12 rectstroke
1938 484 12 12 rectfill
1938 484 12 12 rectstroke
1959 484 12 12 rectfill
1959 484 12 12 rectstroke
1978 485 12 12 rectfill
1978 485 12 12 rectstroke
1996 486 12 12 rectfill
1996 486 12 12 rectstroke
2013 488 12 12 rectfill
2013 488 12 12 rectstroke
2028 490 12 12 rectfill
2028 490 12 12 rectstroke
2043 492 12 12 rectfill
2043 492 12 12 rectstroke
2056 497 12 12 rectfill
2056 497 12 12 rectstroke
2069 503 12 12 rectfill
2069 503 12 12 rectstroke
2082 511 12 12 rectfill
2082 511 12 12 rectstroke
2094 523 12 12 rectfill
2094 523 12 12 rectstroke
2105 538 12 12 rectfill
2105 538 12 12 rectstroke
2115 556 12 12 rectfill
2115 556 12 12 rectstroke
2126 578 12 12 rectfill
2126 578 12 12 rectstroke
2135 601 12 12 rectfill
2135 601 12 12 rectstroke
2145 631 12 12 rectfill
2145 631 12 12 rectstroke
2154 661 12 12 rectfill
2154 661 12 12 rectstroke
2163 692 12 12 rectfill
2163 692 12 12 rectstroke
2171 728 12 12 rectfill
2171 728 12 12 rectstroke
2179 763 12 12 rectfill
2179 763 12 12 rectstroke
2187 796 12 12 rectfill
2187 796 12 12 rectstroke
2195 829 12 12 rectfill
2195 829 12 12 rectstroke
2202 867 12 12 rectfill
2202 867 12 12 rectstroke
2209 899 12 12 rectfill
2209 899 12 12 rectstroke
2216 929 12 12 rectfill
2216 929 12 12 rectstroke
2223 963 12 12 rectfill
2223 963 12 12 rectstroke
2230 992 12 12 rectfill
2230 992 12 12 rectstroke
2236 1025 12 12 rectfill
2236 1025 12 12 rectstroke
2242 1051 12 12 rectfill
2242 1051 12 12 rectstroke
2248 1079 12 12 rectfill
2248 1079 12 12 rectstroke
2254 1112 12 12 rectfill
2254 1112 12 12 rectstroke
2260 1130 12 12 rectfill
2260 1130 12 12 rectstroke
2266 1172 12 12 rectfill
2266 1172 12 12 rectstroke
2271 1196 12 12 rectfill
2271 1196 12 12 rectstroke
2277 1223 12 12 rectfill
2277 1223 12 12 rectstroke
2282 1223 12 12 rectfill
2282 1223 12 12 rectstroke
2287 1253 12 12 rectfill
2287 1253 12 12 rectstroke
2292 1288 12 12 rectfill
2292 1288 12 12 rectstroke
2297 1330 12 12 rectfill
2297 1330 12 12 rectstroke
2302 1330 12 12 rectfill
2302 1330 12 12 rectstroke
2346 1539 12 12 rectfill
2346 1539 12 12 rectstroke
2383 1539 12 12 rectfill
2383 1539 12 12 rectstroke
2415 1697 12 12 rectfill
2415 1697 12 12 rectstroke
2443 1697 12 12 rectfill
2443 1697 12 12 rectstroke
2469 1539 12 12 rectfill
2469 1539 12 12 rectstroke
2492 1697 12 12 rectfill
2492 1697 12 12 rectstroke
2513 1697 12 12 rectfill
2513 1697 12 12 rectstroke
2532 1697 12 12 rectfill
2532 1697 12 12 rectstroke
2550 1539 12 12 rectfill
2550 1539 12 12 rectstroke
2566 1539 12 12 rectfill
2566 1539 12 12 rectstroke
2582 1697 12 12 rectfill
2582 1697 12 12 rectstroke
2596 1697 12 12 rectfill
2596 1697 12 12 rectstroke
2610 1697 12 12 rectfill
2610 1697 12 12 rectstroke
2623 1539 12 12 rectfill
2623 1539 12 12 rectstroke
2635 1697 12 12 rectfill
2635 1697 12 12 rectstroke
2647 1697 12 12 rectfill
2647 1697 12 12 rectstroke
2658 1697 12 12 rectfill
2658 1697 12 12 rectstroke
2669 1778 12 12 rectfill
2669 1778 12 12 rectstroke
2679 1697 12 12 rectfill
2679 1697 12 12 rectstroke
2689 1697 12 12 rectfill
2689 1697 12 12 rectstroke
2698 1697 12 12 rectfill
2698 1697 12 12 rectstroke
2708 1697 12 12 rectfill
2708 1697 12 12 rectstroke
2716 1697 12 12 rectfill
2716 1697 12 12 rectstroke
2725 1539 12 12 rectfill
2725 1539 12 12 rectstroke
2733 1539 12 12 rectfill
2733 1539 12 12 rectstroke
2741 1697 12 12 rectfill
2741 1697 12 12 rectstroke
2748 1697 12 12 rectfill
2748 1697 12 12 rectstroke
2756 1539 12 12 rectfill
2756 1539 12 12 rectstroke
2763 1697 12 12 rectfill
2763 1697 12 12 rectstroke
2770 1697 12 12 rectfill
2770 1697 12 12 rectstroke
2777 1697 12 12 rectfill
2777 1697 12 12 rectstroke
2783 1697 12 12 rectfill
2783 1697 12 12 rectstroke
2790 1697 12 12 rectfill
2790 1697 12 12 rectstroke
2796 1697 12 12 rectfill
2796 1697 12 12 rectstroke
2802 1697 12 12 rectfill
2802 1697 12 12 rectstroke
2808 1539 12 12 rectfill
2808 1539 12 12 rectstroke
2814 1697 12 12 rectfill
2814 1697 12 12 rectstroke
2819 1539 12 12 rectfill
2819 1539 12 12 rectstroke
2825 1697 12 12 rectfill
2825 1697 12 12 rectstroke
2830 1697 12 12 rectfill
2830 1697 12 12 rectstroke
2836 1697 12 12 rectfill
2836 1697 12 12 rectstroke
2841 1697 12 12 rectfill
2841 1697 12 12 rectstroke
2846 1721 12 12 rectfill
2846 1721 12 12 rectstroke
2851 1697 12 12 rectfill
2851 1697 12 12 rectstroke
2856 1697 12 12 rectfill
2856 1697 12 12 rectstroke
gr
gs
gs
1 -1 sc
3074 -1203 tr
90 ro
/MC2_Arial 91 self 0 0 m
( )[25 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC3_Arial 91 self 1760 -182 m
( )[25 ] xs
1 -1 sc
gr
2376 372 m
2767 372 l
2767 486 l
2376 486 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gs
2407 433 m
2495 433 l
st
2507 433 m
2595 433 l
st
gr
2495 427 12 12 rectfill
2376 486 m
1 sw
2495 427 12 12 rectstroke
gr
1 -1 sc
/MC3_Arial 84 self 2595 -461 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2618 -461 m
(g\(f\))[47 28 24 28 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
322 -1259 tr
90 ro
/MC2_Arial 91 self 0 0 m
(g\(f\))[51 30 25 30 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC3_Arial 91 self 1487 -2244 m
(Frequenz [Hz])[56 30 51 51 51 51 51 44 25 25 66 44 25 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
